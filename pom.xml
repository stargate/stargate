<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.stargate</groupId>
  <artifactId>stargate</artifactId>
  <version>1.0.61-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>${project.groupId}:${project.artifactId}</name>
  <description>Core modules for Stargate</description>
  <url>http://github.com/stargate/stargate</url>
  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <osgi.bundle.version>${project.version}</osgi.bundle.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.scm.id>github</project.scm.id>
    <doclint>none</doclint>
    <driver.version>4.14.1</driver.version>
    <xml-format.skip>true</xml-format.skip>

    <!-- First DropWizard version and things it directly depends on that make sense to sync -->
    <dropwizard.version>2.0.28</dropwizard.version>
    <!--
      Note that this is currently aligned with the metrics version that DropWizard transitively depends on.
      It's probably a good idea to keep the two versions in sync.
    -->
    <dropwizard.metrics.version>4.1.29</dropwizard.metrics.version>
    <!--
      Note that this is currently aligned with the Jetty version that DropWizard transitively depends on.
      It's probably a good idea to keep the two versions in sync.
    -->
    <jetty.version>9.4.44.v20210927</jetty.version>
    <!-- Logging framework likewise in sync -->
    <slf4j.version>1.7.36</slf4j.version>
    <logback.version>1.2.9</logback.version>

    <!-- And then other 3rd party version dependencies, compile/runtime -->

    <caffeine.version>2.9.3</caffeine.version>
    <commons-io.version>2.7</commons-io.version>
    <grpc.version>1.45.1</grpc.version>
    <immutables.version>2.8.8</immutables.version>
    <!-- 28-Mar-2022, tatu: BOM for "micro-patch" 2.12.6.1 of jackson-databind
        is bit unusual wrt version; normally would be "x.y.z": when updating see:
          https://mvnrepository.com/artifact/com.fasterxml.jackson/jackson-bom
        for available versions
      -->
    <jackson.version>2.12.6.20220326</jackson.version>
    <javatuples.version>1.2</javatuples.version>
    <!-- Make sure micrometer and prometheus versions are in sync  -->
    <micrometer.version>1.7.3</micrometer.version>
    <prometheus.version>0.10.0</prometheus.version>
    <swagger-ui.version>3.52.5</swagger-ui.version>
    <swagger-jersey2-jaxrs.version>1.6.3</swagger-jersey2-jaxrs.version>
    <netty.version>4.1.75.Final</netty.version>
    <netty-boringssl.version>2.0.51.Final</netty-boringssl.version>

    <!-- And finally test/build deps -->

    <!-- 16-Dec-2021, tatu:  This is an old version (2.10.0 now latest)
        but build fails with newer versions so keeping at this level
      -->
    <errorprone.version>2.3.4</errorprone.version>
    <jacoco.version>0.8.8</jacoco.version>
    <junit.version>5.8.2</junit.version>
    <mockito.version>3.12.4</mockito.version>
    <assertj.version>3.21.0</assertj.version>
    <awaitility.version>4.1.1</awaitility.version>
  </properties>
  <dependencies>
    <!-- Basic OSGi dependency, provided by container -->
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>6.0.0</version>
      <scope>provided</scope>
    </dependency>
    <!-- Shared test dependencies -->
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <classifier>runtime</classifier>
      <scope>test</scope>
      <version>${jacoco.version}</version>
    </dependency>
  </dependencies>
  <profiles>
    <!-- Deployment profile (required so these plugins are only used when deploying) -->
    <profile>
      <id>deploy</id>
      <build>
        <plugins>
          <!-- Source plugin -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.4</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- Javadoc plugin -->
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <verbose>false</verbose>
              <quiet>true</quiet>
              <tags>
                <tag>
                  <name>apiNote</name>
                  <placement>a</placement>
                  <head>API note:</head>
                </tag>
              </tags>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- GPG plugin -->
          <plugin>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <!-- Prevent `gpg` from using pinentry programs -->
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                  <outputDirectory>${project.basedir}/target</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>dse</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <modules>
        <module>core</module>
        <module>stargate-starter</module>
        <module>persistence-api</module>
        <module>persistence-common</module>
        <module>persistence-test</module>
        <module>persistence-cassandra-3.11</module>
        <module>persistence-cassandra-4.0</module>
        <module>persistence-dse-6.8</module>
        <module>cql</module>
        <module>graphqlapi</module>
        <module>restapi</module>
        <module>auth-api</module>
        <module>authnz</module>
        <module>auth-table-based-service</module>
        <module>auth-jwt-service</module>
        <module>health-checker</module>
        <module>config-store-api</module>
        <module>config-store-yaml</module>
        <module>rate-limiting-global</module>
        <module>grpc-proto</module>
        <module>grpc</module>
        <module>metrics-jersey</module>
        <module>grpc-examples</module>
        <!-- testing last -->
        <module>testing-services</module>
        <module>testing</module>
      </modules>
    </profile>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>core</module>
        <module>stargate-starter</module>
        <module>persistence-api</module>
        <module>persistence-common</module>
        <module>persistence-test</module>
        <module>persistence-cassandra-3.11</module>
        <module>persistence-cassandra-4.0</module>
        <module>cql</module>
        <module>graphqlapi</module>
        <module>restapi</module>
        <module>auth-api</module>
        <module>authnz</module>
        <module>auth-table-based-service</module>
        <module>auth-jwt-service</module>
        <module>health-checker</module>
        <module>config-store-api</module>
        <module>config-store-yaml</module>
        <module>rate-limiting-global</module>
        <module>grpc-proto</module>
        <module>grpc</module>
        <module>metrics-jersey</module>
        <module>grpc-examples</module>
        <!-- testing last -->
        <module>testing-services</module>
        <module>testing</module>
      </modules>
    </profile>
  </profiles>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${project.basedir}/stargate-lib/</directory>
              <excludes>
                <exclude>.keep</exclude>
                <exclude>logback.xml</exclude>
              </excludes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- Nexus Staging Plugin -->
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>au.com.acegi</groupId>
        <artifactId>xml-format-maven-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <goals>
              <goal>xml-check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>.idea/**</exclude>
            <exclude>**/target/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M3</version>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <excludes>
            <exclude>**/integration/**/*.java</exclude>
          </excludes>
          <systemPropertyVariables>
            <jacoco-agent.destfile>${project.build.directory}/jacoco-ut.exec</jacoco-agent.destfile>
            <projectRoot>${basedir}/..</projectRoot> <!-- Assumed to run from module -->
          </systemPropertyVariables>
          <argLine>${surefire.jacoco.args}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <includes>
            <include>io/stargate/**/*</include>
          </includes>
          <inclNoLocationClasses>true</inclNoLocationClasses>
        </configuration>
        <executions>
          <execution>
            <id>before-ut-execution</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
              <propertyName>surefire.jacoco.args</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report-ut</id>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>before-it-execution</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-it.exec</destFile>
              <propertyName>failsafe.jacoco.args</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report-it</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>merge-results</id>
            <phase>verify</phase>
            <goals>
              <goal>merge</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-merge-report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <requireUpperBoundDeps>
		  <!-- If specifying includes ONLY those are checked
		       (default: all)
		      -->
                  <includes>
                    <include>com.fasterxml.jackson.core:*</include>
                    <include>org.glassfish.jersey.core:jersey-common</include>
                  </includes>
                </requireUpperBoundDeps>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.10.1</version>
          <configuration>
            <compilerId>javac-with-errorprone</compilerId>
            <forceJavacCompilerUse>true</forceJavacCompilerUse>
            <source>1.8</source>
            <target>1.8</target>
            <compilerArgs combine.children="override">
              <compilerArg>-Xep:MixedMutabilityReturnType:OFF</compilerArg>
              <compilerArg>-Xep:ImmutableEnumChecker:OFF</compilerArg>
              <compilerArg>-Xep:FutureReturnValueIgnored:OFF</compilerArg>
              <compilerArg>-XepExcludedPaths:.*/target/(?:generated-sources|generated-test-sources)/.*</compilerArg>
            </compilerArgs>
            <showWarnings>true</showWarnings>
            <failOnWarning>false</failOnWarning>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.plexus</groupId>
              <artifactId>plexus-compiler-javac-errorprone</artifactId>
              <version>2.8.6</version>
            </dependency>
            <dependency>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${errorprone.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <extensions>true</extensions>
          <version>5.1.1</version>
          <executions>
            <execution>
              <id>bundle-manifest</id>
              <phase>process-classes</phase>
              <goals>
                <goal>manifest</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>1.6.8</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M6</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M6</version>
        </plugin>
        <plugin>
          <artifactId>maven-wrapper-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.10.0</version>
          <configuration>
            <rulesUri>file:///${session.executionRootDirectory}/maven-version-rules.xml</rulesUri>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>7.0.3</version>
          <configuration>
            <suppressionFiles>
              <suppressionFile>file:///${session.executionRootDirectory}/dependency-check-suppression.xml</suppressionFile>
            </suppressionFiles>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git://github.com/stargate/stargate.git</connection>
    <developerConnection>scm:git:git@github.com:stargate/stargate.git</developerConnection>
    <url>http://github.com/stargate/stargate/tree/master</url>
  </scm>
  <developers>
    <developer>
      <name>The Stargate Authors</name>
      <email>maintainers@stargate.io</email>
      <organization>Stargate</organization>
    </developer>
  </developers>
  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>
  <dependencyManagement>
    <dependencies>
      <!-- To get a consistent set of Jackson components, use BOM:
           will provide default version for all standard components
          (but will not add actual dependencies)
        -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- BOM/dependencies for dropwizard too: -->
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-bom</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- But note that dropwizard-bom only contains core components,
	   not dropwizard-metrics, so we still need these:
	  -->
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-healthchecks</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-jvm</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-servlet</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-graphite</artifactId>
        <version>${dropwizard.metrics.version}</version>
      </dependency>
      <!-- 30-Mar-2022, tatu: temporarily force newer jersey-common
	   (over what DW asks) to get vuln fixes; make sure we have enforcer rules to alert if this
	   becomes less than latest
	  -->
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>2.34</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- BOM for gRPC as well -->
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlets</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-http</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-io</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-security</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.ben-manes.caffeine</groupId>
        <artifactId>caffeine</artifactId>
        <version>${caffeine.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-core</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-registry-prometheus</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-jersey2</artifactId>
        <version>${micrometer.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_dropwizard</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>org.immutables</groupId>
        <artifactId>value</artifactId>
        <version>${immutables.version}</version>
      </dependency>
      <dependency>
        <groupId>org.javatuples</groupId>
        <artifactId>javatuples</artifactId>
        <version>${javatuples.version}</version>
      </dependency>
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>20220320</version>
      </dependency>
      <dependency>
        <groupId>com.bpodgursky</groupId>
        <artifactId>jbool_expressions</artifactId>
        <version>1.23</version>
      </dependency>
      <dependency>
        <groupId>com.datastax.oss</groupId>
        <artifactId>java-driver-shaded-guava</artifactId>
        <version>25.1-jre</version>
      </dependency>
      <dependency>
        <groupId>com.datastax.oss</groupId>
        <artifactId>java-driver-core</artifactId>
        <version>${driver.version}</version>
      </dependency>
      <!-- 14-Jun-2022, tatu: with java-driver-core 4.14.1 this dependency is optional
            and not brought as compile-time dependency, so needs to be explicitly added
           (see [stargate#1889] for details). But we better use consistent version
        -->
      <dependency>
        <groupId>com.esri.geometry</groupId>
        <artifactId>esri-geometry-api</artifactId>
        <version>1.2.1</version>
      </dependency>
      <dependency>
        <groupId>com.datastax.oss</groupId>
        <artifactId>java-driver-query-builder</artifactId>
        <version>${driver.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-testing</artifactId>
        <version>${dropwizard.version}</version>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>4.0.1</version>
      </dependency>
      <dependency>
        <groupId>com.nimbusds</groupId>
        <artifactId>nimbus-jose-jwt</artifactId>
        <version>9.21</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>bintray</name>
      <url>https://jcenter.bintray.com</url>
    </repository>
  </repositories>
</project>
