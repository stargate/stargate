stargate:

  # configures data store
  # see io.stargate.sgv2.api.common.config.DataStoreConfig for all config properties and options
  data-store:
    ignore-bridge: ${stargate.multi-tenancy.enabled}

  # graphql config
  graphql:
    # Whether to default to the oldest keyspace when the user accesses /graphql.
    # If this is disabled, /graphql throws an error, and the keyspace must be provided explicitly in
    # the path, as in /graphql/ksName.
    enable-default-keyspace: true

    # Whether to expose the GraphQL Playground in-browser IDE at /playground.
    enable-playground: true

  # metrics properties
  # see io.stargate.sgv2.api.common.config.MetricsConfig for all config properties and options
  metrics:
    global-tags:
      module: sgv2-graphqlapi
    tenant-request-counter:
      enabled: ${stargate.multi-tenancy.enabled}

  # multi tenancy settings
  # see io.stargate.sgv2.api.common.config.MultiTenancyConfig for all config properties and options
  multi-tenancy:
    enabled: false

quarkus:

  # general app properties
  application:
    name: Stargate GraphQL API

  # banner for the startup
  banner:
    path: banner/banner.txt

  # cache properties
  cache:
    caffeine:
      # keyspace cache for the schema management
      keyspace-cache:
        maximum-size: 1000
        expire-after-access: PT5M
        metrics-enabled: true

  # properties for the gRPC clients
  grpc:
    # all the clients' setup, only bridge
    clients:
      bridge:
        host: localhost
        port: 8091

    # force no grpc server start in dev as we have no grpc service
    dev-mode:
      force-server-start: false

  # HTTP settings
  http:
    port: 8080
    non-application-root-path: stargate

    # Require authentication where relevant:
    auth:
      proactive: false
      permission:
        default:
          paths: /graphql-schema, /graphql/*, /graphql-admin, /graphql-files/keyspace/*
          policy: authenticated

  micrometer:
    binder:
      http-server:
        # ignore all non-application uris, as well as the custom set
        suppress-non-application-uris: true
        ignore-patterns: /,/metrics,/playground,.*\.html

        # due to https://github.com/quarkusio/quarkus/issues/24938
        # we need to define uri templating on our own for now
        # note that order is important
        match-patterns: |
          /graphql/[\\w]+=/graphql/{keyspaceName}
          /graphql-files/keyspace/[\\w]+.graphql=/graphql-files/keyspace/{keyspaceName}.graphql

    # exports at prometheus default path
    export:
      prometheus:
        path: /metrics

  # OpenTelemetry configuration
  opentelemetry:
    tracer:
      # in the dev env use the sampler that samples all requests
      sampler:
        ~: ratio
        ratio: 1.0
      # the OTPL should be enabled and endpoint should be specified in order to report traces
      exporter:
        otlp:
          enabled: false
          endpoint:

  # Don't enable Swagger: our REST resources are generic GraphQL endpoints, clients will typically
  # introspect the GraphQL schema instead.
  swagger-ui:
    enable: false

  smallrye-openapi:
    enable: false

# shared development properties
"%dev":

  # disable retries in the data store config and enable fall back
  stargate:
    data-store:
      bridge-fallback-enabled: true

  io:
    stargate:
      sgv2:
        api:
          common:
            properties:
              datastore:
                configuration:
                  DataStorePropertiesConfiguration/fetchSupportedFeatures/Retry/maxRetries: 0
