syntax = "proto3";

import "google/protobuf/any.proto";

option java_package = "io.stargate.proto";
option go_package = "stargate/proto";

package stargate;

enum Consistency {
  CONSISTENCY_ANY = 0x00;
  CONSISTENCY_ONE = 0x01;
  CONSISTENCY_TWO = 0x02;
  CONSISTENCY_THREE = 0x03;
  CONSISTENCY_QUORUM = 0x04;
  CONSISTENCY_ALL = 0x05;
  CONSISTENCY_LOCAL_QUORUM = 0x06;
  CONSISTENCY_EACH_QUORUM = 0x07;
  CONSISTENCY_SERIAL = 0x08;
  CONSISTENCY_LOCAL_SERIAL = 0x09;
  CONSISTENCY_LOCAL_ONE = 0x0A;
}

message Collection {
  repeated Value elements = 1;
}

message Map {
  message Pair {
    Value key = 1;
    Value value = 2;
  }
  Pair pairs = 1;
}

message UdtValue {
  map<string, Value> fields = 1;
}

message Inet {
  bytes address = 1;
}

message Uuid {
  fixed64 low = 1;
  fixed64 high = 2;
}

message Date {
  uint32 value = 1;
}

message Time {
  uint64 value = 1;
}

message Value {
  message Null {}
  message Unset {}
  oneof inner {
    Null null = 1;
    Unset unset = 2;
    sint64 int = 3; // tinyint, smallint, int, bigint, counter, timestamp
    float float = 4; // float
    double double = 5; // double
    bool boolean = 6; // boolean
    string string = 7; // ascii, varchar, text
    bytes bytes = 8; // blob, custom
    Inet inet = 9; // inet
    Uuid uuid = 10; // uuid, timeuuid
    Date date = 11; // date
    Time time = 12; // time
    Collection collection = 13; // list, set, tuple
    Map map = 14;
    UdtValue udt = 15;
  }
}

message Query {
  string cql = 1;
  QueryParameters parameters = 2;
}

message Values {
  repeated Value values = 1;
  repeated string value_names = 2;
}

message Payload {
  Type type = 1;
  enum Type {// Do we need an enum here or can we detect the type from Any?
    TYPE_CQL = 0;
    // TYPE_JSON = 1;
    // TYPE_AVRO = 2;
    // ...
  }
  google.protobuf.Any value = 2;
}

message QueryParameters {
  string keyspace = 1;
  // TODO: Output payload type? Or is it the same as the input and CQL by default?
  Payload payload = 2;
  Consistency consistency = 3;
  int32 page_size = 4;
  bytes paging_state = 5;
  bool tracing = 6;
  bool skip_metadata = 7;
  int64 timestamp = 8;
  Consistency serial_consistency = 9;
  int32 now_in_seconds = 10;
}

message TypeSpec {
  enum Type {
    TYPE_CUSTOM = 0x00;
    TYPE_ASCII = 0x01;
    TYPE_BIGINT = 0x02;
    TYPE_BLOB = 0x03;
    TYPE_BOOLEAN = 0x04;
    TYPE_COUNTER = 0x05;
    TYPE_DECIMAL = 0x06;
    TYPE_DOUBLE = 0x07;
    TYPE_FLOAT = 0x08;
    TYPE_INT = 0x09;
    TYPE_TIMESTAMP = 0x0B;
    TYPE_UUID = 0x0C;
    TYPE_VARCHAR = 0x0D;
    TYPE_VARINT = 0x0E;
    TYPE_TIMEUUID = 0x0F;
    TYPE_INET = 0x10;
    TYPE_DATE = 0x11;
    TYPE_TIME = 0x12;
    TYPE_SMALLINT = 0x13;
    TYPE_TINYINT = 0x14;
    TYPE_LIST = 0x20;
    TYPE_MAP = 0x21;
    TYPE_SET = 0x22;
    TYPE_UDT = 0x30;
    TYPE_TUPLE = 0x31;
  }
  Type type = 1;
  oneof complex {
    MapSpec map = 2;
    TypeSpec list = 3;
    TypeSpec set = 4;
    UdtSpec udt = 5;
    TupleSpec tuple = 6;
  };
}


message MapSpec {
  TypeSpec key = 1;
  TypeSpec value = 2;
}

message UdtSpec {
  map<string, TypeSpec> fields = 1;
}

message TupleSpec {
  repeated TypeSpec elements = 1;
}

message ColumnSpec {
  TypeSpec type = 1;
  string name = 2;
}

message Result {
  Error error = 1;
  oneof results {
    Empty empty = 2;
    Payload payload = 3;
  }
  bytes tracing_id = 4;
  repeated string warnings = 5;
}

message Empty {}

message Unavailable {
  Consistency consistency = 1;
  int32 required = 2;
  int32 alive = 3;
};

message WriteTimeout {
  Consistency consistency = 1;
  int32 received = 2;
  int32 block_for = 3;
  string write_type = 4;
};

message ReadTimeout {
  Consistency consistency = 1;
  int32 received = 2;
  int32 block_for = 3;
  bool data_present = 4;
};

message ReadFailure {
  Consistency consistency = 1;
  int32 received = 2;
  int32 block_for = 3;
  int32 num_failures = 4;
  bool data_present = 5;
};

message FunctionFailure {
  string keyspace = 1;
  string function = 2;
  repeated string arg_types = 3;
}

message WriteFailure {
  Consistency consistency = 1;
  int32 received = 2;
  int32 block_for = 3;
  int32 num_failures = 4;
  string write_type = 5;
}

message AlreadyExists {
  string keyspace = 1;
  string table = 2;
}

message Error {
  string message = 1;
  repeated google.protobuf.Any details = 2;
}

message Row {
  repeated Value values = 1;
}

message ResultSet {
  repeated ColumnSpec columns = 1;
  repeated Row rows = 2;
}

message BatchQuery {
  string cql = 1;
  Payload payload = 2;
}

message BatchParameters {
  string keyspace = 1;
  Consistency consistency = 2;
  int64 timestamp = 9;
  Consistency serial_consistency = 10;
  int32 now_in_seconds = 11;
}

message Batch {
  enum Type {
    TYPE_LOGGED = 0;
    TYPE_UNLOGGED = 1;
    TYPE_COUNTER = 2;
  }
  Type type = 1;
  repeated BatchQuery queries = 2;
  BatchParameters parameters = 3;
}