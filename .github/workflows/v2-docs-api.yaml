name: CI for Docs API V2

on:

# for now only manual trigger
#  push:
#    branches: [ "v2.0.0" ]
#
#  pull_request:
#    branches: [ "v2.0.0" ]

  workflow_dispatch:

jobs:

  build-coordinator:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: maven

      - name: Setup Maven
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory-snapshots</id>
                <username>${ARTIFACTORY_USERNAME}</username>
                <password>${ARTIFACTORY_PASSWORD}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${ARTIFACTORY_USERNAME}</username>
                <password>${ARTIFACTORY_PASSWORD}</password>
             </server>
           </servers>
          </settings>
          EOF

      - name: Cache Snapshots
        uses: actions/cache@v3
        id: cache-coordinator-snapshots
        env:
          cache-name: cache-coordinator-snapshots
        with:
          path: ~/.m2/repository/io/stargate/
          key: snapshots-${{ github.sha }}

      - name: Build
        if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
        run: ./mvnw install -P dse -DskipTests

      - name: Set up QEMU
        if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Images
        if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
        run: ./build_docker_images.sh -t ${{ github.sha }}

      - name: Export Docker Images
        if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
        run: |
          docker save --output coordinator-3_11-${{ github.sha }}.tar stargateio/coordinator-3_11:${{ github.sha }}
          docker save --output coordinator-4_0-${{ github.sha }}.tar stargateio/coordinator-4_0:${{ github.sha }}
          docker save --output coordinator-dse-68-${{ github.sha }}.tar stargateio/coordinator-dse-68:${{ github.sha }}

      - name: Upload Docker Images
        if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: coordinator-images
          path: |
            coordinator-3_11-${{ github.sha }}.tar
            coordinator-4_0-${{ github.sha }}.tar
            coordinator-dse-68-${{ github.sha }}.tar


  build:
    needs: build-coordinator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Setup Maven
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory-snapshots</id>
                <username>${ARTIFACTORY_USERNAME}</username>
                <password>${ARTIFACTORY_PASSWORD}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${ARTIFACTORY_USERNAME}</username>
                <password>${ARTIFACTORY_PASSWORD}</password>
             </server>
           </servers>
          </settings>
          EOF

      - name: Restore Snapshots
        uses: actions/cache@v3
        id: restore-coordinator-snapshots
        env:
          cache-name: cache-coordinator-snapshots
        with:
          path: ~/.m2/repository/io/stargate/
          key: snapshots-${{ github.sha }}

      - name: Build & Test
        run: |
          cd sgv2-docsapi/
          ./mvnw -B test

  int-tests:
    needs: [ build-coordinator, build ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        profile: [ cassandra-40, cassandra-311, dse-68 ]
        include:
          - profile: cassandra-40
            image: coordinator-4_0-${{ github.sha }}.tar
          - profile: cassandra-311
            image: coordinator-3_11-${{ github.sha }}.tar
          - profile: dse-68
            image: coordinator-dse-68-${{ github.sha }}.tar

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download Docker Images
        uses: actions/download-artifact@v3
        with:
          name: coordinator-images
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/${{ matrix.image }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Setup Maven
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          mkdir -p ~/.m2
          cat <<EOF > ~/.m2/settings.xml
          <settings>
            <servers>
              <server>
                <id>artifactory-snapshots</id>
                <username>${ARTIFACTORY_USERNAME}</username>
                <password>${ARTIFACTORY_PASSWORD}</password>
              </server>
              <server>
                <id>artifactory-releases</id>
                <username>${ARTIFACTORY_USERNAME}</username>
                <password>${ARTIFACTORY_PASSWORD}</password>
             </server>
           </servers>
          </settings>
          EOF

      - name: Restore Snapshots
        uses: actions/cache@v3
        id: restore-coordinator-snapshots
        env:
          cache-name: cache-coordinator-snapshots
        with:
          path: ~/.m2/repository/io/stargate/
          key: snapshots-${{ github.sha }}

      - name: Integration Test
        run: |
          cd sgv2-docsapi/
          ./mvnw -B integration-test -DskipUnitTests -P ${{ matrix.profile }}
